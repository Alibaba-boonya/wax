WAX_FILES = FileList["*"].exclude(/^(examples|xcode-template4|xcode-template|framework|tools)/)
WAX_ROOT = File.expand_path("..", __FILE__)

task :default => :install

desc "Install wax xcode templates"
task :install => "template:create"

namespace :template do
  if not ENV['XCODE4'] and `xcodebuild -version` =~ /Xcode 3\./
    # Install for XCODE 3
    TARGET_XCODE_TEMPLATE = "#{ENV['HOME']}/Library/Application Support/Developer/Shared/Xcode/Project Templates/Wax/Wax iPhone App"
    TEMPLATE_NAME = "xcode-template"
    TEMPLATE_WAX_PATH = "#{TARGET_XCODE_TEMPLATE}/wax"
  else
    # Install for XCODE 4
    TARGET_XCODE_TEMPLATE = "#{ENV['HOME']}/Library/Developer/Xcode/Templates/Wax iPhone App"
    TEMPLATE_NAME = "xcode4-template"
    TEMPLATE_WAX_PATH = "#{TARGET_XCODE_TEMPLATE}/Window-based Application.xctemplate/wax"
  end

  task :create => :clean do
    mkdir_p File.dirname(TARGET_XCODE_TEMPLATE)
    cp_r TEMPLATE_NAME, TARGET_XCODE_TEMPLATE

    # Copy the wax files into the template
    mkdir_p TEMPLATE_WAX_PATH
    cp_r WAX_FILES, TEMPLATE_WAX_PATH
    `chmod +x "#{TARGET_XCODE_TEMPLATE}/wax/lib/build-scripts/copy-scripts.sh"`

    # Create the default run script
    puts
    puts "Wax Xcode Template Installed!"
    puts "-----------------------------"
    puts 
  end

  desc "Prepare xcode template for editing"
  task :edit => :clean do
    ln_s WAX_ROOT, "#{TEMPLATE_NAME}/wax"
  end

  desc "Cleans up xcode template for packaging"
  task :clean do
    rm_r TARGET_XCODE_TEMPLATE, :force => true

    rm_r "#{TEMPLATE_NAME}/wax", :force => true
    rm_r "#{TEMPLATE_NAME}/build", :force => true
  end
end
